editorCaption=ScriptingMatchingRule editor
accessGroupFieldCaption=Access group
isTerminalRuleFieldCaption=Terminal rule
isOverrideExistingRolesFieldCaption=Override existing roles
isOverrideExistingAccessGroupFieldCaption=Override existing access group
isDisabledFieldCaption=Disabled
descriptionFieldCaption=Description
rolesTableCaption=Roles
groovyConditionCaption=Groovy condition
testConstraintButtonCaption=Test groovy script
userLogin=User login
testGroovyScriptResultNoUser=No user in LDAP with login: %s
testGroovyScriptResultCompilationError=An error occurred while compiling Groovy script.<br><br>%s
testGroovyScriptResultOtherError=An error occurred while executing Groovy script.<br><br>%s
testGroovyScriptResultTrue=Groovy script return TRUE
testGroovyScriptResultFalse=Groovy script return FALSE
testGroovyScriptResultNonBoolean=Groovy script return non boolean value
notificationError=Error
notificationSuccess=Success
groovyScriptConditionTitle=Groovy script condition
groovyScriptCondition=A value of this field represents groovy script which would evaluated using LDAP matching rule context.<br>\
  The {ldapContext} placeholder should be used as an alias of LDAP matching rule context.<br>\
  The {ldapContext} has below fields:<ul>\
  <li><code>ldapUser</code> - main LDAP person properties (login,cn,sn,email,memberOf,accessGroups,isDisabled,position,language,ou).</li>\
  <li><code>appliedRules</code> - matching rules which were applied to context.</li>\
  <li><code>roles</code> - roles which were applied to user.</li>\
  <li><code>group</code> - current access group of user.</li>\
  <li><code>cubaUser</code> - cuba user to whom matching rules are applying.</li>\
  <li><code>isTerminalRuleApply</code> - signals that applying of matching rules must stop.</li>\
  For example:<br>\
  <code>{ldapContext}.ldapUser.login==\"admin\"</code>




